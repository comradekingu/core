@import 'variables.scss';

ion-radio {
  background: initial !important;
}

ion-label {
  overflow-x: auto !important;
}

ion-content {
  --padding-top: 20px;
  --padding-end: 20px;
  --padding-bottom: 20px;
  --padding-start: 20px;

  &.no-padding {
    --padding-top: 0;
    --padding-end: 0;
    --padding-bottom: 0;
    --padding-start: 0;
  }
}

ion-searchbar {
  padding-inline-start: 0 !important;
  min-height: initial !important;
}

ion-button {
  &::part(native) {
    min-height: initial;
    padding: 0.5rem;
  }
}

ion-segment-button {
  ion-label {
    justify-content: center;
  }
}

.dm-condition-background {
  @each $condition, $conditionColor in $dmConditions {
    &.#{$condition} {
      &,
      &::part(mark) {
        background-color: var(--dm-condition-#{$condition});

        @if $condition == 'missing' {
          background-image: linear-gradient(
            45deg,
            red 0%,
            transparent 0%,
            transparent 48%,
            red 48%,
            red 52%,
            transparent 52%,
            transparent 100%
          );
          background-size: 50px 50px;
        }
      }
    }
  }
}

.toast-error {
  text-align: center;
  opacity: 0.85;
  &::part(container) {
    background: #db663b;
    color: white;
  }
}

ion-searchbar {
  display: flex;
  align-items: center;
  padding: 0 !important;
  height: 25px !important;

  > div,
  > div > input {
    height: 100% !important;
  }

  .searchbar-input-container {
    display: flex;
    align-items: center;

    .searchbar-clear-button {
      left: 0;
      width: 24px;
    }

    .searchbar-search-icon {
      inset-inline-end: 16px;
      inset-inline-start: initial;
      top: 0 !important;
    }

    ion-icon {
      top: initial !important;
    }
    input {
      padding-top: 0 !important;
      text-align: right !important;
    }
  }
}

ion-fab-list {
  right: 0;
  align-items: end;

  background: rgba(0, 0, 0, 0.7);
  border-radius: 1rem;

  ion-item {
    background: inherit;
    width: 100%;
  }
}
